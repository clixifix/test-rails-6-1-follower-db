daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    server_tokens off;

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log logs/nginx/access.log l2met;
    error_log logs/nginx/error.log;

    include mime.types;
    default_type application/octet-stream;
    #sendfile on;

    #Must read the body in 5 seconds.
    client_body_timeout 5;

    upstream app_server {
        server unix:/tmp/nginx.socket fail_timeout=0;
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name <%= ENV['CLOUDFRONT_ENDPOINT'] || '_' %>;
        keepalive_timeout 5;
        client_max_body_size 50M;

        add_header 'Access-Control-Allow-Origin' '<%= ENV['CLOUDFRONT_ENDPOINT'] || '*' %>';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';

        #redirects needed to allow bookmarking/refreshing of vue routed pages...
        #VUE Routing START
        rewrite ^(/purchaser/portal)/(.*)$ $1 last;
        #VUE Routing END

        # Assets START
        location ~* \.(eot|ttf|woff|woff2|ico|xml|txt|html)$ {
          add_header Access-Control-Allow-Origin *;
          root   /app/public;
          expires max;
          access_log off;
        }

        location /assets {
          add_header Access-Control-Allow-Origin *;
          root   /app/public;
          expires max;
          access_log off;
        }

        location /javascripts {
          add_header Access-Control-Allow-Origin *;
          root   /app/public;
          expires max;
          access_log off;
        }

        location /media {
          add_header Access-Control-Allow-Origin *;
          root   /app/public;
          expires max;
          access_log off;
        }

        location /packs {
          add_header Access-Control-Allow-Origin *;
          root   /app/public;
          expires max;
          access_log off;
        }
        # Assets END

        location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host <%= ENV.fetch('CLOUDFRONT_ENDPOINT', '$http_host') %>;
          proxy_set_header X-Request-Start "t=${msec}";
          proxy_redirect off;
          proxy_pass http://app_server;
        }
    }
}
